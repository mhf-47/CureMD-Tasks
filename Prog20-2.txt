Certainly, here's a simplified version of the Longest Common Subsequence (LCS) problem in C# with straightforward and basic logic:

```csharp
using System;

namespace LongestCommonSubsequence
{
    class Program
    {
        static void Main()
        {
            Console.WriteLine("Enter the first string:");
            string str1 = Console.ReadLine();
            Console.WriteLine("Enter the second string:");
            string str2 = Console.ReadLine();

            int m = str1.Length;
            int n = str2.Length;

            int[,] dp = new int[m + 1, n + 1];

            // Initialize the first row and first column with zeros
            for (int i = 0; i <= m; i++)
            {
                dp[i, 0] = 0;
            }
            for (int j = 1; j <= n; j++)
            {
                dp[0, j] = 0;
            }

            // Fill the DP table
            for (int i = 1; i <= m; i++)
            {
                for (int j = 1; j <= n; j++)
                {
                    if (str1[i - 1] == str2[j - 1])
                    {
                        dp[i, j] = dp[i - 1, j - 1] + 1;
                    }
                    else
                    {
                        dp[i, j] = Math.Max(dp[i - 1, j], dp[i, j - 1]);
                    }
                }
            }

            // Reconstruct the LCS
            int lcsLength = dp[m, n];
            char[] lcs = new char[lcsLength];

            int x = m, y = n, k = lcsLength - 1;
            while (x > 0 && y > 0)
            {
                if (str1[x - 1] == str2[y - 1])
                {
                    lcs[k] = str1[x - 1];
                    x--;
                    y--;
                    k--;
                }
                else if (dp[x - 1, y] > dp[x, y - 1])
                {
                    x--;
                }
                else
                {
                    y--;
                }
            }

            string longestCommonSubsequence = new string(lcs);

            Console.WriteLine("Longest Common Subsequence: " + longestCommonSubsequence);
        }
    }
}
```

This version of the program follows a simple approach to finding the LCS of two strings. It fills a 2D array (`dp`) using basic logic and reconstructs the LCS without introducing additional methods. It's designed for easy understanding.